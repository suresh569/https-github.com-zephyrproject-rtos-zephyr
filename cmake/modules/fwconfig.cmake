# Copyright (c) 2024, Tomasz Bursztyka
#
# SPDX-License-Identifier: Apache-2.0

include_guard(GLOBAL)

include(extensions)
include(python)
include(arch_v1)
include(arch_v2)
include(soc_v1)
include(soc_v2)
include(boards)

#
# ToDo DOC
#

# The directory containing fwconfig script and files.
set(FWCONFIG_BASE     ${ZEPHYR_BASE}/scripts/fwconfig)

# Fwconfig script that will generate a header about soft/hard init nodes
# priority and - whene relevant - levels too.
set(FWCONFIG_SCRIPT   ${FWCONFIG_BASE}/fwconfig)

# The edtlib.EDT object in pickle format.
set(EDT_PICKLE        ${PROJECT_BINARY_DIR}/edt.pickle)

# The .config file generated by Kconfig
set(DOTCONFIG         ${PROJECT_BINARY_DIR}/.config)

# The generated C header needed by <zephyr/init.h>
set(FWCONFIG_INIT_H   ${BINARY_DIR_INCLUDE_GENERATED}/zinit.h)

# Predefined directories where to look for fw_config.yaml files
# 1 - Default:
list(APPEND fwconfig_lookup_dirs ${ZEPHYR_BASE})

# 2 - Arch:
list(APPEND fwconfig_lookup_dirs ${ARCH_DIR}/${ARCH})

# 3 - SoC:
list(APPEND fwconfig_lookup_dirs ${SOC_FULL_DIR})

# 4 - Modules:
zephyr_get(ZEPHYR_MODULES)
zephyr_get(EXTRA_ZEPHYR_MODULES VAR EXTRA_ZEPHYR_MODULES ZEPHYR_EXTRA_MODULES)
list(APPEND fwconfig_lookup_dirs ${ZEPHYR_MODULES} ${EXTRA_ZEPHYR_MODULES})

# 5 - Board:
list(APPEND fwconfig_lookup_dirs ${BOARD_DIR} ${BOARD_EXTENSION_DIRS})

# 6 - Application:
list(APPEND fwconfig_lookup_dirs ${APPLICATION_CONFIG_DIR} ${APPLICATION_CONFIG_DIR}/boards)

# Now looking up for the actual files:
zephyr_file(CONF_FILES ${fwconfig_lookup_dirs} FWCONF fwconfig_files)

message(STATUS "Found fwconfig files: ${fwconfig_files}")

#
# Run FWCONFIG_SCRIPT
#
execute_process(
  COMMAND ${PYTHON_EXECUTABLE} ${FWCONFIG_SCRIPT}
  --fwconfig-files ${fwconfig_files}
  -
  init
  --dotconfig-file ${DOTCONFIG}
  --edt-pickle ${EDT_PICKLE}
  --header-out ${FWCONFIG_INIT_H}
  OUTPUT_QUIET # Discard stdout
  WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
  RESULT_VARIABLE ret
  )

if(NOT "${ret}" STREQUAL "0")
  message(FATAL_ERROR "command failed with return code: ${ret}")
endif()
